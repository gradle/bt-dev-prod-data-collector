/*
 * This file is generated by jOOQ.
 */
package org.gradle.devprod.collector.persistence.generated.jooq.tables.records;


import java.time.OffsetDateTime;

import org.gradle.devprod.collector.persistence.generated.jooq.tables.TeamcityBuildQueueLength;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeamcityBuildQueueLengthRecord extends UpdatableRecordImpl<TeamcityBuildQueueLengthRecord> implements Record3<Integer, OffsetDateTime, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.teamcity_build_queue_length.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.teamcity_build_queue_length.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.teamcity_build_queue_length.time</code>.
     */
    public void setTime(OffsetDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.teamcity_build_queue_length.time</code>.
     */
    public OffsetDateTime getTime() {
        return (OffsetDateTime) get(1);
    }

    /**
     * Setter for <code>public.teamcity_build_queue_length.length</code>.
     */
    public void setLength(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.teamcity_build_queue_length.length</code>.
     */
    public Integer getLength() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, OffsetDateTime, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, OffsetDateTime, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TeamcityBuildQueueLength.TEAMCITY_BUILD_QUEUE_LENGTH.ID;
    }

    @Override
    public Field<OffsetDateTime> field2() {
        return TeamcityBuildQueueLength.TEAMCITY_BUILD_QUEUE_LENGTH.TIME;
    }

    @Override
    public Field<Integer> field3() {
        return TeamcityBuildQueueLength.TEAMCITY_BUILD_QUEUE_LENGTH.LENGTH;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public OffsetDateTime component2() {
        return getTime();
    }

    @Override
    public Integer component3() {
        return getLength();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public OffsetDateTime value2() {
        return getTime();
    }

    @Override
    public Integer value3() {
        return getLength();
    }

    @Override
    public TeamcityBuildQueueLengthRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TeamcityBuildQueueLengthRecord value2(OffsetDateTime value) {
        setTime(value);
        return this;
    }

    @Override
    public TeamcityBuildQueueLengthRecord value3(Integer value) {
        setLength(value);
        return this;
    }

    @Override
    public TeamcityBuildQueueLengthRecord values(Integer value1, OffsetDateTime value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TeamcityBuildQueueLengthRecord
     */
    public TeamcityBuildQueueLengthRecord() {
        super(TeamcityBuildQueueLength.TEAMCITY_BUILD_QUEUE_LENGTH);
    }

    /**
     * Create a detached, initialised TeamcityBuildQueueLengthRecord
     */
    public TeamcityBuildQueueLengthRecord(Integer id, OffsetDateTime time, Integer length) {
        super(TeamcityBuildQueueLength.TEAMCITY_BUILD_QUEUE_LENGTH);

        setId(id);
        setTime(time);
        setLength(length);
    }
}
