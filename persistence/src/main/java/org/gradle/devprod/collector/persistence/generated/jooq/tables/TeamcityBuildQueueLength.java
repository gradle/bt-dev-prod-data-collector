/*
 * This file is generated by jOOQ.
 */
package org.gradle.devprod.collector.persistence.generated.jooq.tables;


import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import org.gradle.devprod.collector.persistence.generated.jooq.Indexes;
import org.gradle.devprod.collector.persistence.generated.jooq.Keys;
import org.gradle.devprod.collector.persistence.generated.jooq.Public;
import org.gradle.devprod.collector.persistence.generated.jooq.tables.records.TeamcityBuildQueueLengthRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeamcityBuildQueueLength extends TableImpl<TeamcityBuildQueueLengthRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.teamcity_build_queue_length</code>
     */
    public static final TeamcityBuildQueueLength TEAMCITY_BUILD_QUEUE_LENGTH = new TeamcityBuildQueueLength();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TeamcityBuildQueueLengthRecord> getRecordType() {
        return TeamcityBuildQueueLengthRecord.class;
    }

    /**
     * The column <code>public.teamcity_build_queue_length.id</code>.
     */
    public final TableField<TeamcityBuildQueueLengthRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.teamcity_build_queue_length.time</code>.
     */
    public final TableField<TeamcityBuildQueueLengthRecord, OffsetDateTime> TIME = createField(DSL.name("time"), SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false), this, "");

    /**
     * The column <code>public.teamcity_build_queue_length.length</code>.
     */
    public final TableField<TeamcityBuildQueueLengthRecord, Integer> LENGTH = createField(DSL.name("length"), SQLDataType.INTEGER.nullable(false), this, "");

    private TeamcityBuildQueueLength(Name alias, Table<TeamcityBuildQueueLengthRecord> aliased) {
        this(alias, aliased, null);
    }

    private TeamcityBuildQueueLength(Name alias, Table<TeamcityBuildQueueLengthRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.teamcity_build_queue_length</code> table reference
     */
    public TeamcityBuildQueueLength(String alias) {
        this(DSL.name(alias), TEAMCITY_BUILD_QUEUE_LENGTH);
    }

    /**
     * Create an aliased <code>public.teamcity_build_queue_length</code> table reference
     */
    public TeamcityBuildQueueLength(Name alias) {
        this(alias, TEAMCITY_BUILD_QUEUE_LENGTH);
    }

    /**
     * Create a <code>public.teamcity_build_queue_length</code> table reference
     */
    public TeamcityBuildQueueLength() {
        this(DSL.name("teamcity_build_queue_length"), null);
    }

    public <O extends Record> TeamcityBuildQueueLength(Table<O> child, ForeignKey<O, TeamcityBuildQueueLengthRecord> key) {
        super(child, key, TEAMCITY_BUILD_QUEUE_LENGTH);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TEAMCITY_BUILD_QUEUE_LENGTH_TIME);
    }

    @Override
    public UniqueKey<TeamcityBuildQueueLengthRecord> getPrimaryKey() {
        return Keys.TEAMCITY_BUILD_QUEUE_LENGTH_PKEY;
    }

    @Override
    public List<UniqueKey<TeamcityBuildQueueLengthRecord>> getKeys() {
        return Arrays.<UniqueKey<TeamcityBuildQueueLengthRecord>>asList(Keys.TEAMCITY_BUILD_QUEUE_LENGTH_PKEY);
    }

    @Override
    public TeamcityBuildQueueLength as(String alias) {
        return new TeamcityBuildQueueLength(DSL.name(alias), this);
    }

    @Override
    public TeamcityBuildQueueLength as(Name alias) {
        return new TeamcityBuildQueueLength(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TeamcityBuildQueueLength rename(String name) {
        return new TeamcityBuildQueueLength(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TeamcityBuildQueueLength rename(Name name) {
        return new TeamcityBuildQueueLength(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, OffsetDateTime, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
