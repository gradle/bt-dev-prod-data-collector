/*
 * This file is generated by jOOQ.
 */
package org.gradle.devprod.collector.persistence.generated.jooq.tables.records;


import org.gradle.devprod.collector.persistence.generated.jooq.tables.BuildTrends;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BuildTrendsRecord extends UpdatableRecordImpl<BuildTrendsRecord> implements Record4<String, String, OffsetDateTime, String[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.build_trends.build_id</code>.
     */
    public void setBuildId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.build_trends.build_id</code>.
     */
    public String getBuildId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.build_trends.project_id</code>.
     */
    public void setProjectId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.build_trends.project_id</code>.
     */
    public String getProjectId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.build_trends.build_start</code>.
     */
    public void setBuildStart(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.build_trends.build_start</code>.
     */
    public OffsetDateTime getBuildStart() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.build_trends.tags</code>.
     */
    public void setTags(String[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.build_trends.tags</code>.
     */
    public String[] getTags() {
        return (String[]) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, OffsetDateTime, String[]> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, OffsetDateTime, String[]> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return BuildTrends.BUILD_TRENDS.BUILD_ID;
    }

    @Override
    public Field<String> field2() {
        return BuildTrends.BUILD_TRENDS.PROJECT_ID;
    }

    @Override
    public Field<OffsetDateTime> field3() {
        return BuildTrends.BUILD_TRENDS.BUILD_START;
    }

    @Override
    public Field<String[]> field4() {
        return BuildTrends.BUILD_TRENDS.TAGS;
    }

    @Override
    public String component1() {
        return getBuildId();
    }

    @Override
    public String component2() {
        return getProjectId();
    }

    @Override
    public OffsetDateTime component3() {
        return getBuildStart();
    }

    @Override
    public String[] component4() {
        return getTags();
    }

    @Override
    public String value1() {
        return getBuildId();
    }

    @Override
    public String value2() {
        return getProjectId();
    }

    @Override
    public OffsetDateTime value3() {
        return getBuildStart();
    }

    @Override
    public String[] value4() {
        return getTags();
    }

    @Override
    public BuildTrendsRecord value1(String value) {
        setBuildId(value);
        return this;
    }

    @Override
    public BuildTrendsRecord value2(String value) {
        setProjectId(value);
        return this;
    }

    @Override
    public BuildTrendsRecord value3(OffsetDateTime value) {
        setBuildStart(value);
        return this;
    }

    @Override
    public BuildTrendsRecord value4(String[] value) {
        setTags(value);
        return this;
    }

    @Override
    public BuildTrendsRecord values(String value1, String value2, OffsetDateTime value3, String[] value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BuildTrendsRecord
     */
    public BuildTrendsRecord() {
        super(BuildTrends.BUILD_TRENDS);
    }

    /**
     * Create a detached, initialised BuildTrendsRecord
     */
    public BuildTrendsRecord(String buildId, String projectId, OffsetDateTime buildStart, String[] tags) {
        super(BuildTrends.BUILD_TRENDS);

        setBuildId(buildId);
        setProjectId(projectId);
        setBuildStart(buildStart);
        setTags(tags);
    }
}
