/*
 * This file is generated by jOOQ.
 */
package org.gradle.devprod.collector.persistence.generated.jooq.udt;


import org.gradle.devprod.collector.persistence.generated.jooq.Public;
import org.gradle.devprod.collector.persistence.generated.jooq.udt.records.KeyValueRecord;
import org.jooq.Schema;
import org.jooq.UDTField;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.SchemaImpl;
import org.jooq.impl.UDTImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KeyValue extends UDTImpl<KeyValueRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.key_value</code>
     */
    public static final KeyValue KEY_VALUE = new KeyValue();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<KeyValueRecord> getRecordType() {
        return KeyValueRecord.class;
    }

    /**
     * The attribute <code>public.key_value.key</code>.
     */
    public static final UDTField<KeyValueRecord, String> KEY = createField(DSL.name("key"), SQLDataType.VARCHAR, KEY_VALUE, "");

    /**
     * The attribute <code>public.key_value.value</code>.
     */
    public static final UDTField<KeyValueRecord, String> VALUE = createField(DSL.name("value"), SQLDataType.VARCHAR, KEY_VALUE, "");

    /**
     * No further instances allowed
     */
    private KeyValue() {
        super("key_value", null, null, false);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC != null ? Public.PUBLIC : new SchemaImpl(DSL.name("public"));
    }
}
