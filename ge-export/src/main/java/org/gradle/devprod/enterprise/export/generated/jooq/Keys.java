/*
 * This file is generated by jOOQ.
 */
package org.gradle.devprod.enterprise.export.generated.jooq;


import org.gradle.devprod.enterprise.export.generated.jooq.tables.Build;
import org.gradle.devprod.enterprise.export.generated.jooq.tables.Tags;
import org.gradle.devprod.enterprise.export.generated.jooq.tables.records.BuildRecord;
import org.gradle.devprod.enterprise.export.generated.jooq.tables.records.TagsRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BuildRecord> BUILD_PK = UniqueKeys0.BUILD_PK;
    public static final UniqueKey<TagsRecord> TAGS_PK = UniqueKeys0.TAGS_PK;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<TagsRecord, BuildRecord> TAGS__TAGS_BUILD_FK = ForeignKeys0.TAGS__TAGS_BUILD_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<BuildRecord> BUILD_PK = Internal.createUniqueKey(Build.BUILD, "build_pk", new TableField[] { Build.BUILD.BUILD_ID }, true);
        public static final UniqueKey<TagsRecord> TAGS_PK = Internal.createUniqueKey(Tags.TAGS, "tags_pk", new TableField[] { Tags.TAGS.BUILD_ID, Tags.TAGS.TAG_NAME }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<TagsRecord, BuildRecord> TAGS__TAGS_BUILD_FK = Internal.createForeignKey(Keys.BUILD_PK, Tags.TAGS, "tags_build_fk", new TableField[] { Tags.TAGS.BUILD_ID }, true);
    }
}
